<%- include('doctype.ejs'); %>

<html>
	<head>
		<title><%-vars.register_title%></title>
		<%- include('pages_imports.ejs'); %>
		<script src='https://www.google.com/recaptcha/api.js'></script>

		<script>
			let recaptcha_checked = false
		</script>
	</head>

	<body>
		<div class='main'>
			<div class='header_info'>
				<div>You can register here</div>
				<div>Choose a username and password</div>
				<div>Or you can <a href="/login" class="underline">login</a> instead</div>
			</div>

			<form method="post" action="/register" name="register" onsubmit="return validate_form()">
				<input type="text" placeholder="Username" name="username" id="register_username">

				<div class="spacer4"></div>
				<input type="password" placeholder="Password" name="password" id="register_password">
				<div class="spacer4"></div>
				<input type="password" placeholder="Password Again" id="register_password2">
				<div class="spacer4"></div>

				<% if(vars.use_register_code) {%>
				<input type="text" placeholder="Code" name="code" id="register_code">
				<div class="spacer4"></div>
				<%}%>

				<% if(vars.recaptcha_enabled) {%>
				<div class="g-recaptcha" data-sitekey="<%-vars.recaptcha_key%>" data-callback="recaptcha_callback"></div>
				<div class="spacer4"></div>
				<%}%>

				<input id="btn_register" type="submit" value="Register">

			</form>

			<div class="spacer1"></div>
		</div>

		<script>
			let user_el = DOM.el(`#register_username`)
			let pass_el = DOM.el(`#register_password`)
			let pass2_el = DOM.el(`#register_password2`)
			let code_el = DOM.el(`#register_code`)
			let btn_submit = DOM.el(`#btn_register`)

			user_el.focus()

			function validate_form() {
				if (msg_info.is_open()) {
					return false
				}

				if (recaptcha_enabled && !recaptcha_checked) {
					return false
				}

				user_el.value = user_el.value.trim()

				let username = user_el.value
				let password = pass_el.value
				let password2 = pass2_el.value
				let code

				if (code_el) {
					code = code_el.value
				}
				else {
					code = ``
				}

				if (username.length === 0) {
					show_info(`Username can't be empty`)
					return false
				}

				if (password.length === 0) {
					show_info(`Password can't be empty`)
					return false
				}

				if (username.length > max_username_length) {
					show_info(`Username is too Long`)
					return false
				}

				if (username !== utilz.clean_username(username)) {
					show_info(`Username contains invalid characters. Only letters and numbers are allowed`)
					return false
				}

				if (password.length < min_password_length) {
					show_info(`Password is too short. It must be at least ${min_password_length} characters long`)
					return false
				}

				if (password.length > max_password_length) {
					show_info(`Password is too long`)
					return false
				}

				if (password !== utilz.single_space(password)) {
					show_info(`Password contains invalid characters. There can't be spaces at the start or end of the password, or consecutive spaces`)
					return false
				}

				if (password !== password2) {
					show_info(`The passwords don't match`)
					return false
				}

				if (code.length > 100) {
					show_info(`Invalid code`)
					return false
				}

				btn_submit.disabled = true
				return true
			}

			let current_username = ``
			DOM.ev(user_el, `input`, on_username_input)

			function on_username_input() {
				let username = user_el.value.trim()
				username = username.replace(/[^a-zA-Z0-9]/g, ``)
				user_el.value = username

				if (username === current_username) {
					return
				}

				if (username.length > max_username_length) {
					username = username.substring(0, max_username_length)
					user_el.value = username
				}

				current_username = username
			}

			function recaptcha_callback() {
				recaptcha_checked = true
			}

			if (form_username && form_username !== `undefined`) {
				user_el.value = form_username
				on_username_input()
			}
		</script>
	</body>
</html>